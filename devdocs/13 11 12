I'm having problems getting to the output part of this project. and I think one of the difficulies is in how i've been defining the way in which you send data from the input, to processing, to output. I went to great efforts to define Common Markup Language, but I don't think it works. The problem is that this makes the implication that the data is going to be similar. But a chunk of news headlines from tldr-news, a chapter from the bible, and personal account statistics are not very similar at all. So I think I'm going to make a huge fundamental change that will simplify things hugely: You pass one object from input to processing, and a list of objects from processing to output. About as simple as you can get. But as a general rule of thumb remember the following:

Input - it draws from datasources, be they web, database, files, or makes it up, but it's job is only to get the data into a work-able and potentially re-usable form. for example:
tldr-n: pulls down the articles, puts them into a list of libraries. each library contains a headline and a body.
bible: pulls in verses associated with the days date from the database and sends returns a list of tuples. tuples contain (book,chapter,verse,script). list of continous verses.
personalFinance: pulls in a list of transactions within the monthly date range. returns a list of tuples.

processing - it takes raw data from input, or semi-processed data from another processor. But most importantly an outward facing processor should have the data ready to be out put, to try an minimize the number of different output plugins needed. but it is important to note that this level should try to remain as output target agnostic as possiible. There are some things that you can't fudge this on. A text file, for example, cannot support pictures, but it can manage rought formating.
